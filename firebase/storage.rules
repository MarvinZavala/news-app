rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    function isSignedIn() {
      return request.auth != null;
    }

    function storyIsOwned(newsId) {
      let story = get(/databases/(default)/documents/news/{newsId});
      return isSignedIn() && story.exists() && story.data.submittedBy == request.auth.uid;
    }

    match /news/{newsId}/media/{fileName} {
      allow read: if true;
      allow create, update: if storyIsOwned(newsId) &&
                              request.resource.size < 100 * 1024 * 1024 &&
                              (request.resource.contentType.matches('image/.*') ||
                               request.resource.contentType.matches('video/.*'));
      allow delete: if storyIsOwned(newsId);
      allow list: if storyIsOwned(newsId);
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
